<?xml version="1.0"?>
<launch>

<!-- 
    * Copyright (c) 2022 taurob GmbH. All rights reserved. Confidential and proprietary.
    * Perfektastrasse 57/7, 1230 Wien, Austria. office@taurob.comtion
-->

    <!-- [BEGIN] === Simulation arguments === -->
    <arg name="paused" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="true"/>
    <arg name="rviz" default="true"/>
    <arg name="start_rqt" default="true"/>
    <arg name="start_laserscan" default="true"/>
    <arg name="robot_model" default="inspector_longarm"/>
    <arg name="x_offset" default="0" doc="X offset for spawning the robot."/>
    <arg name="y_offset" default="0" doc="Y offset for spawning the robot."/>
    <arg name="z_offset" default="0.2" doc="Z offset for spawning the robot."/>
    <arg name="collision_model" default="simple"/>
    <arg name="use_cameras" default="true" />
    <arg name="use_moveit" default="false" doc="Valid arguments: false or true" />
    <arg name="world_file" default="$(find taurob_robots_description)/worlds/caxias.world"/>
   <!-- Load Custom World Instead of Empty World -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
     <arg name="world_name" value="$(arg world_file)"/>
     <arg name="debug" value="$(arg debug)" />
     <arg name="gui" value="$(arg gui)" />
     <arg name="paused" value="$(arg paused)" />
     <arg name="use_sim_time" value="$(arg use_sim_time)" />
     <arg name="headless" value="$(arg headless)"/>
     <arg name="verbose" value="$(arg verbose)" />
    </include>
   <!-- [BEGIN] === Load Controllers === -->

     <param name="robot_description" command="$(find xacro)/xacro '$(find taurob_robots_description)/urdf/$(arg robot_model)/model_with_arm.urdf.xacro'
        operation_mode:='simulation'
        use_cameras:=$(arg use_cameras) 
        collision_mode:='$(arg collision_model)'"/>

    <rosparam file="$(find taurob_robots_description)/config/$(arg robot_model)/controller_state.yaml" command="load"/>
    <rosparam file="$(find taurob_robots_description)/config/$(arg robot_model)/controller_flipper.yaml" command="load"/>
    <rosparam file="$(find taurob_robots_description)/config/$(arg robot_model)/controller_arm.yaml" command="load"/>

    <!-- [BEGIN] === Spawn Controllers === -->
     <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller arm_trajectory_controller flipper_joint_position_controller"/>
    <!-- Spawn the moving box -->
      <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-file ./src/taurob_robots_description/world/caxias.world -sdf -model moving_box" />
    <!-- [BEGIN] === Spawn Robot === -->
    <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" args="-param robot_description
            -urdf
            -model robot_description
            -x $(arg x_offset)
            -y $(arg y_offset)
            -z $(arg z_offset)
            " respawn="false" output="screen" />

    <!-- [BEGIN] === Load Controllers === -->
    <node name="joint_setter" pkg="taurob_robots_description" type="initial_joint_angles.py" output="screen" args="--robot_model inspector_longarm" />
  
    <!-- [BEGIN] === Robot State Publisher === -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>

    <!-- Start moveit components. Configfile in ros_controllers.yaml -->
    <group if="$(eval arg('use_moveit')==true)">
        <include file="$(find taurob_bring_up)/launch/1_moveit_arm.launch">
            <arg name="robot_model" value="$(arg robot_model)" />
        </include>   
    </group>

    <!-- [BEGIN] === RViz === -->
    <node if="$(arg rviz)" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false" output="screen" args="-d $(find taurob_robots_description)/rviz/inspector_longarm.rviz"/>
    
    <!-- [BEGIN] === Load Controller GUI  === -->
    <group if="$(eval arg('start_rqt')==true)">
        <node name = "tracker_rqt_dashboard" pkg = "rqt_gui" type = "rqt_gui" respawn = "false" output = "screen"/>
    </group>

    <!-- [BEGIN] === Launch PointCloud2/Scan node for LIDAR  === -->
    <group if="$(eval arg('start_laserscan')==true)">
        <node pkg="velodyne_laserscan" name="pointcloud_2_laserscan" type="velodyne_laserscan_node"/>
    </group>
</launch>
